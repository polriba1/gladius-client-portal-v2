import { Link } from "react-router-dom";
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { Separator } from "@/components/ui/separator";
import { useState, useEffect } from "react";
import { 
  ArrowRight, 
  Phone, 
  PhoneCall, 
  Calendar, 
  TrendingUp, 
  Clock, 
  CheckCircle, 
  AlertTriangle, 
  DollarSign,
  BarChart3,
  Users,
  Shield,
  Zap,
  Sword
} from "lucide-react";
import { useLanguage } from "@/contexts/LanguageContext";
import { LanguageSwitcher } from "@/components/LanguageSwitcher";

const Landing = () => {
  const { t } = useLanguage();
  const [missedCalls, setMissedCalls] = useState<number>(0);
  const [averageTicket, setAverageTicket] = useState<number>(0);
  const [conversionRate, setConversionRate] = useState<number>(0);
  const [monthlyLoss, setMonthlyLoss] = useState<number>(0);
  const [monthlyRecovery, setMonthlyRecovery] = useState<number>(0);
  const [yearlyBenefit, setYearlyBenefit] = useState<number>(0);

  const scrollToHowItWorks = () => {
    document.getElementById('como-funciona')?.scrollIntoView({ behavior: 'smooth' });
  };

  useEffect(() => {
    const monthlyLossCalc = missedCalls * averageTicket * 30;
    const effectiveConversionRate = conversionRate || 30; // Use 30% as default if empty
    const monthlyRecoveryCalc = monthlyLossCalc * (effectiveConversionRate / 100);
    const yearlyBenefitCalc = monthlyRecoveryCalc * 12;
    
    setMonthlyLoss(monthlyLossCalc);
    setMonthlyRecovery(monthlyRecoveryCalc);
    setYearlyBenefit(yearlyBenefitCalc);
  }, [missedCalls, averageTicket, conversionRate]);

  return (
    <div className="min-h-screen bg-gradient-hero">
      {/* Header */}
      <header className="bg-background/95 backdrop-blur-sm border-b border-border shadow-elegant sticky top-0 z-50 h-16">
        <div className="container mx-auto px-4 sm:px-6 py-3 flex justify-between items-center h-full">
          <div className="flex items-center space-x-3">
            <div className="w-8 h-8 sm:w-10 sm:h-10 bg-primary rounded-lg flex items-center justify-center">
              <Sword className="w-4 h-4 sm:w-5 sm:h-5 text-primary-foreground" />
            </div>
            <h1 className="text-lg sm:text-2xl font-bold text-foreground">GladiusAI</h1>
          </div>

          {/* Navigation Menu */}
          <nav className="hidden lg:flex items-center space-x-6">
            <button 
              onClick={() => document.querySelector('[data-section="hero"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.home')}
            </button>
            <button 
              onClick={() => document.querySelector('[data-section="pain"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.pain')}
            </button>
            <button 
              onClick={() => document.querySelector('[data-section="solution"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.solution')}
            </button>
            <button 
              onClick={() => document.getElementById('como-funciona')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.howItWorks')}
            </button>
            <button 
              onClick={() => document.querySelector('[data-section="social-proof"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.results')}
            </button>
            <button 
              onClick={() => document.querySelector('[data-section="calculator"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.calculator')}
            </button>
            <button 
              onClick={() => document.querySelector('[data-section="faq"]')?.scrollIntoView({ behavior: 'smooth' })}
              className="text-sm font-medium text-muted-foreground hover:text-primary transition-colors"
            >
              {t('landing.menu.faq')}
            </button>
          </nav>
          
          <div className="flex items-center gap-3">
            <LanguageSwitcher />
            <Button 
              onClick={() => window.open('https://calendly.com/pol-gladiusai/llamada-introduccion', '_blank')}
              className="px-4 sm:px-6 text-sm sm:text-base"
            >
              {t('landing.cta.bookDemo')}
            </Button>
            <Link to="/login">
              <Button variant="outline" className="px-4 sm:px-6 text-sm sm:text-base">
                {t('landing.cta.clientArea')}
              </Button>
            </Link>
          </div>
        </div>
      </header>

      {/* Hero Section */}
      <section data-section="hero" className="pt-24 pb-16 sm:py-20 lg:py-32 px-4 sm:px-6 min-h-screen flex items-center">
        <div className="container mx-auto max-w-6xl text-center w-full">
          <Badge variant="secondary" className="mb-4 sm:mb-6 px-3 sm:px-4 py-1.5 sm:py-2 text-xs sm:text-sm">
            <Zap className="w-3 h-3 sm:w-4 sm:h-4 mr-1.5 sm:mr-2" />
            {t('landing.hero.badge')}
          </Badge>
          
          <h1 className="text-3xl sm:text-5xl lg:text-7xl font-bold text-foreground mb-4 sm:mb-6 leading-tight">
            {t('landing.hero.title1')}
            <span className="text-primary block mt-2">
              {t('landing.hero.title2')}
            </span>
          </h1>
          
          <p className="text-base sm:text-xl text-muted-foreground mb-6 sm:mb-8 max-w-3xl mx-auto px-2">
            {t('landing.hero.subtitle')}
          </p>

          <div className="flex justify-center mb-8 sm:mb-12">
            <Button 
              onClick={() => window.open('https://calendly.com/pol-gladiusai/llamada-introduccion', '_blank')}
              size="lg" 
              className="text-base sm:text-lg px-6 sm:px-8 py-4 sm:py-6 gap-2 sm:gap-3 shadow-elegant hover:shadow-lg"
            >
              {t('landing.cta.bookDemo')}
              <ArrowRight className="w-4 h-4 sm:w-5 sm:h-5" />
            </Button>
          </div>

          <div className="flex justify-center max-w-2xl mx-auto text-xs sm:text-sm text-muted-foreground">
            <div className="flex items-center justify-center gap-2">
              <Clock className="w-3 h-3 sm:w-4 sm:h-4 text-primary" />
              {t('landing.hero.available247')}
            </div>
          </div>

        </div>
      </section>

      {/* Pain Section */}
      <section data-section="pain" className="py-16 sm:py-20 lg:py-24 px-4 sm:px-6 bg-gradient-to-br from-destructive/5 via-background/50 to-destructive/10 relative overflow-hidden">
        {/* Background decoration */}
        <div className="absolute inset-0 bg-gradient-to-r from-destructive/5 to-transparent opacity-50"></div>
        <div className="absolute top-10 right-10 w-20 h-20 sm:w-32 sm:h-32 bg-destructive/10 rounded-full blur-3xl"></div>
        <div className="absolute bottom-10 left-10 w-16 h-16 sm:w-24 sm:h-24 bg-destructive/5 rounded-full blur-2xl"></div>
        
        <div className="container mx-auto max-w-5xl relative">
          <div className="text-center mb-12 sm:mb-16 lg:mb-20">
            <div className="inline-flex items-center gap-2 bg-destructive/10 text-destructive px-3 sm:px-4 py-1.5 sm:py-2 rounded-full text-xs sm:text-sm font-medium mb-4 sm:mb-6">
              <AlertTriangle className="w-3 h-3 sm:w-4 sm:h-4" />
              {t('landing.pain.badge')}
            </div>
            <h2 className="text-3xl sm:text-4xl lg:text-5xl font-bold text-foreground mb-4 sm:mb-6 leading-tight px-2">
              {t('landing.pain.title')}
            </h2>
            <p className="text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto px-2">
              {t('landing.pain.subtitle')}
            </p>
          </div>

          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8 mb-12 sm:mb-16">
            <Card className="group relative p-6 sm:p-8 border-2 border-destructive/20 bg-background/80 backdrop-blur-sm hover:border-destructive/30 transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-destructive/20 to-destructive/10 rounded-2xl flex items-center justify-center mb-4 sm:mb-6 mx-auto group-hover:scale-110 transition-transform duration-300">
                  <AlertTriangle className="w-6 h-6 sm:w-8 sm:h-8 text-destructive" />
                </div>
                <h3 className="text-lg sm:text-xl font-bold text-foreground mb-3 sm:mb-4">{t('landing.pain.clientsLeave')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground leading-relaxed">
                  {t('landing.pain.clientsLeaveDesc')}
                </p>
              </CardContent>
            </Card>

            <Card className="group relative p-6 sm:p-8 border-2 border-destructive/20 bg-background/80 backdrop-blur-sm hover:border-destructive/30 transition-all duration-300 hover:shadow-lg hover:-translate-y-1">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-destructive/20 to-destructive/10 rounded-2xl flex items-center justify-center mb-4 sm:mb-6 mx-auto group-hover:scale-110 transition-transform duration-300">
                  <Users className="w-6 h-6 sm:w-8 sm:h-8 text-destructive" />
                </div>
                <h3 className="text-lg sm:text-xl font-bold text-foreground mb-3 sm:mb-4">{t('landing.pain.manualCallbacks')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground leading-relaxed">
                  {t('landing.pain.manualCallbacksDesc')}
                </p>
              </CardContent>
            </Card>

            <Card className="group relative p-6 sm:p-8 border-2 border-destructive/20 bg-background/80 backdrop-blur-sm hover:border-destructive/30 transition-all duration-300 hover:shadow-lg hover:-translate-y-1 sm:col-span-2 lg:col-span-1">
              <CardContent className="p-0 text-center">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-gradient-to-br from-destructive/20 to-destructive/10 rounded-2xl flex items-center justify-center mb-4 sm:mb-6 mx-auto group-hover:scale-110 transition-transform duration-300">
                  <BarChart3 className="w-6 h-6 sm:w-8 sm:h-8 text-destructive" />
                </div>
                <h3 className="text-lg sm:text-xl font-bold text-foreground mb-3 sm:mb-4">{t('landing.pain.noVisibility')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground leading-relaxed">
                  {t('landing.pain.noVisibilityDesc')}
                </p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Solution Section */}
      <section data-section="solution" className="py-16 sm:py-20 px-4 sm:px-6">
        <div className="container mx-auto max-w-6xl">
          <div className="text-center mb-12 sm:mb-16">
            <h2 className="text-3xl sm:text-4xl font-bold text-foreground mb-4 sm:mb-6 px-2">
              {t('landing.solution.title')}
            </h2>
            <p className="text-lg sm:text-xl text-muted-foreground max-w-2xl mx-auto px-2">
              {t('landing.solution.subtitle')}
            </p>
          </div>

          <div className="grid sm:grid-cols-2 lg:grid-cols-3 gap-6 sm:gap-8 mb-12 sm:mb-16">
            <Card className="p-6 sm:p-8 shadow-elegant hover:shadow-lg transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300">
                  <PhoneCall className="w-6 h-6 sm:w-8 sm:h-8 text-primary" />
                </div>
                <h3 className="text-lg sm:text-xl font-semibold text-foreground mb-3 sm:mb-4">{t('landing.solution.respondsToCalls')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground mb-3 sm:mb-4 leading-relaxed">
                  {t('landing.solution.respondsToCallsDesc')}
                </p>
                <div className="space-y-2 text-xs sm:text-sm text-muted-foreground">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.instantResponse')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.naturalConversations')}</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-6 sm:p-8 shadow-elegant hover:shadow-lg transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300">
                  <Users className="w-6 h-6 sm:w-8 sm:h-8 text-primary" />
                </div>
                <h3 className="text-lg sm:text-xl font-semibold text-foreground mb-3 sm:mb-4">{t('landing.solution.obtainsInfo')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground mb-3 sm:mb-4 leading-relaxed">
                  {t('landing.solution.obtainsInfoDesc')}
                </p>
                <div className="space-y-2 text-xs sm:text-sm text-muted-foreground">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.connectsToTools')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.savesInfoAutomatically')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.identifiesOpportunities')}</span>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-6 sm:p-8 shadow-elegant hover:shadow-lg transition-all duration-300 group sm:col-span-2 lg:col-span-1">
              <CardContent className="p-0">
                <div className="w-12 h-12 sm:w-16 sm:h-16 bg-primary/10 rounded-full flex items-center justify-center mb-4 sm:mb-6 group-hover:scale-110 transition-transform duration-300">
                  <Calendar className="w-6 h-6 sm:w-8 sm:h-8 text-primary" />
                </div>
                <h3 className="text-lg sm:text-xl font-semibold text-foreground mb-3 sm:mb-4">{t('landing.solution.actsAsEmployee')}</h3>
                <p className="text-sm sm:text-base text-muted-foreground mb-3 sm:mb-4 leading-relaxed">
                  {t('landing.solution.actsAsEmployeeDesc')}
                </p>
                <div className="space-y-2 text-xs sm:text-sm text-muted-foreground">
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.schedulesAppointments')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.createsDocuments')}</span>
                  </div>
                  <div className="flex items-center gap-2">
                    <CheckCircle className="w-3 h-3 sm:w-4 sm:h-4 text-primary flex-shrink-0" />
                    <span>{t('landing.solution.learnsProcesses')}</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>

          {/* Integration showcase */}
          <div className="bg-gradient-to-br from-primary/5 to-primary/10 rounded-2xl p-6 sm:p-8 border border-primary/20">
            <div className="text-center mb-6 sm:mb-8">
              <h3 className="text-xl sm:text-2xl font-semibold text-foreground mb-2 sm:mb-3">{t('landing.solution.integratesWith')}</h3>
              <p className="text-sm sm:text-base text-muted-foreground">
                {t('landing.solution.adaptsToWorkflow')}
              </p>
            </div>
            
            <div className="grid grid-cols-2 sm:grid-cols-4 gap-4 sm:gap-6 text-center">
              <div className="flex flex-col items-center gap-2">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-primary/20 rounded-lg flex items-center justify-center">
                  <BarChart3 className="w-5 h-5 sm:w-6 sm:h-6 text-primary" />
                </div>
                <span className="text-xs sm:text-sm font-medium text-foreground">{t('landing.solution.crm')}</span>
              </div>
              <div className="flex flex-col items-center gap-2">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-primary/20 rounded-lg flex items-center justify-center">
                  <Calendar className="w-5 h-5 sm:w-6 sm:h-6 text-primary" />
                </div>
                <span className="text-xs sm:text-sm font-medium text-foreground">{t('landing.solution.calendars')}</span>
              </div>
              <div className="flex flex-col items-center gap-2">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-primary/20 rounded-lg flex items-center justify-center">
                  <DollarSign className="w-5 h-5 sm:w-6 sm:h-6 text-primary" />
                </div>
                <span className="text-xs sm:text-sm font-medium text-foreground">{t('landing.solution.erp')}</span>
              </div>
              <div className="flex flex-col items-center gap-2">
                <div className="w-10 h-10 sm:w-12 sm:h-12 bg-primary/20 rounded-lg flex items-center justify-center">
                  <Shield className="w-5 h-5 sm:w-6 sm:h-6 text-primary" />
                </div>
                <span className="text-xs sm:text-sm font-medium text-foreground">{t('landing.solution.helpdesk')}</span>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* How It Works */}
      <section id="como-funciona" className="py-24 px-6 bg-gradient-to-br from-background/50 via-primary/5 to-background/50 relative overflow-hidden">
        {/* Background decoration */}
        <div className="absolute inset-0 bg-gradient-to-r from-primary/5 to-transparent opacity-30"></div>
        <div className="absolute top-20 right-20 w-40 h-40 bg-primary/10 rounded-full blur-3xl"></div>
        <div className="absolute bottom-20 left-20 w-32 h-32 bg-primary/5 rounded-full blur-2xl"></div>
        
        <div className="container mx-auto max-w-5xl relative">
          <div className="text-center mb-20">
            <div className="inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6">
              <Zap className="w-4 h-4" />
              {t('landing.howItWorks.badge')}
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6 leading-tight">
              {t('landing.howItWorks.title')}
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              {t('landing.howItWorks.subtitle')}
            </p>
          </div>

          <div className="space-y-16">
            {/* Step 1 */}
            <div className="flex flex-col lg:flex-row items-center gap-12">
              <div className="flex-shrink-0">
                <div className="relative">
                  <div className="w-24 h-24 bg-gradient-to-br from-primary to-primary/80 rounded-full flex items-center justify-center text-primary-foreground text-3xl font-bold shadow-lg">
                    1
                  </div>
                  <div className="absolute -inset-4 bg-primary/20 rounded-full blur-xl opacity-50 animate-pulse"></div>
                </div>
              </div>
              <div className="flex-1 text-center lg:text-left">
                <h3 className="text-3xl font-bold text-foreground mb-4">{t('landing.howItWorks.step1Title')}</h3>
                <p className="text-lg text-muted-foreground mb-6 leading-relaxed">
                  {t('landing.howItWorks.step1Desc')}
                </p>
                <div className="grid md:grid-cols-2 gap-4 text-sm">
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <Clock className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.available247')}</span>
                  </div>
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <Shield className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.naturalConversation')}</span>
                  </div>
                </div>
              </div>
            </div>

            <Separator className="my-12" />

            {/* Step 2 */}
            <div className="flex flex-col lg:flex-row-reverse items-center gap-12">
              <div className="flex-shrink-0">
                <div className="relative">
                  <div className="w-24 h-24 bg-gradient-to-br from-primary to-primary/80 rounded-full flex items-center justify-center text-primary-foreground text-3xl font-bold shadow-lg">
                    2
                  </div>
                  <div className="absolute -inset-4 bg-primary/20 rounded-full blur-xl opacity-50 animate-pulse"></div>
                </div>
              </div>
              <div className="flex-1 text-center lg:text-left">
                <h3 className="text-3xl font-bold text-foreground mb-4">{t('landing.howItWorks.step2Title')}</h3>
                <p className="text-lg text-muted-foreground mb-6 leading-relaxed">
                  {t('landing.howItWorks.step2Desc')}
                </p>
                <div className="grid md:grid-cols-2 gap-4 text-sm">
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <Users className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.obtainsCompleteInfo')}</span>
                  </div>
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <BarChart3 className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.updatesToolsInstantly')}</span>
                  </div>
                </div>
              </div>
            </div>

            <Separator className="my-12" />

            {/* Step 3 */}
            <div className="flex flex-col lg:flex-row items-center gap-12">
              <div className="flex-shrink-0">
                <div className="relative">
                  <div className="w-24 h-24 bg-gradient-to-br from-primary to-primary/80 rounded-full flex items-center justify-center text-primary-foreground text-3xl font-bold shadow-lg">
                    3
                  </div>
                  <div className="absolute -inset-4 bg-primary/20 rounded-full blur-xl opacity-50 animate-pulse"></div>
                </div>
              </div>
              <div className="flex-1 text-center lg:text-left">
                <h3 className="text-3xl font-bold text-foreground mb-4">{t('landing.howItWorks.step3Title')}</h3>
                <p className="text-lg text-muted-foreground mb-6 leading-relaxed">
                  {t('landing.howItWorks.step3Desc')}
                </p>
                <div className="grid md:grid-cols-2 gap-4 text-sm">
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <Calendar className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.appointmentsScheduled')}</span>
                  </div>
                  <div className="flex items-center gap-3 bg-background/50 rounded-lg p-3 border border-primary/20">
                    <TrendingUp className="w-5 h-5 text-primary" />
                    <span className="text-muted-foreground">{t('landing.howItWorks.customWorkflows')}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>

        </div>
      </section>

      {/* Social Proof Section */}
      <section data-section="social-proof" className="py-24 px-4 sm:px-6">
        <div className="container mx-auto max-w-5xl">
          <div className="text-center mb-20">
            <div className="inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6">
              <TrendingUp className="w-4 h-4" />
              {t('landing.socialProof.badge')}
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6 leading-tight">
              {t('landing.socialProof.title')}
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              {t('landing.socialProof.subtitle')}
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-8 mb-16">
            <Card className="p-8 bg-gradient-to-br from-primary/10 via-primary/5 to-primary/10 border-2 border-primary/20 relative overflow-hidden group hover:shadow-lg transition-all duration-300">
              <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent opacity-50"></div>
              <CardContent className="p-0 relative">
                <div className="flex items-center gap-4 mb-6">
                  <div className="w-14 h-14 bg-primary/20 rounded-2xl flex items-center justify-center">
                    <DollarSign className="w-8 h-8 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-foreground">{t('landing.socialProof.recoveredFailures')}</h3>
                    <p className="text-foreground font-medium">{t('landing.socialProof.serviceReal')}</p>
                  </div>
                </div>
                <p className="text-5xl font-bold text-primary mb-4">80</p>
                <p className="text-xl font-bold text-foreground mb-6">{t('landing.socialProof.failuresInDays')}</p>
              </CardContent>
            </Card>

            <Card className="p-8 bg-gradient-to-br from-primary/10 via-primary/5 to-primary/10 border-2 border-primary/20 relative overflow-hidden group hover:shadow-lg transition-all duration-300">
              <div className="absolute inset-0 bg-gradient-to-br from-primary/5 to-transparent opacity-50"></div>
              <CardContent className="p-0 relative">
                <div className="flex items-center gap-4 mb-6">
                  <div className="w-14 h-14 bg-primary/20 rounded-2xl flex items-center justify-center">
                    <PhoneCall className="w-8 h-8 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-2xl font-bold text-foreground">{t('landing.socialProof.automatedCalls')}</h3>
                    <p className="text-foreground font-medium">{t('landing.socialProof.multipleClients')}</p>
                  </div>
                </div>
                <p className="text-5xl font-bold text-primary mb-4">+1,500</p>
                <p className="text-xl font-bold text-foreground mb-6">{t('landing.socialProof.callsManaged')}</p>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Revenue Calculator Section */}
      <section data-section="calculator" className="py-24 px-4 sm:px-6 bg-gradient-to-br from-background/50 via-primary/5 to-background/50">
        <div className="container mx-auto max-w-5xl">
          <div className="text-center mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6 leading-tight">
              {t('landing.calculator.title')}
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              {t('landing.calculator.subtitle')}
            </p>
          </div>

          <div className="bg-gradient-to-br from-primary/10 via-background to-primary/5 rounded-2xl p-8 border-2 border-primary/20">
            <div className="max-w-4xl mx-auto">
              <div className="grid md:grid-cols-3 gap-8 mb-8">
                <div className="space-y-4">
                  <label className="block text-sm font-semibold text-foreground mb-2">
                    {t('landing.calculator.missedCallsPerDay')}
                  </label>
                  <input
                    type="number"
                    placeholder={t('landing.calculator.example')}
                    value={missedCalls || ''}
                    onChange={(e) => setMissedCalls(parseInt(e.target.value) || 0)}
                    className="w-full p-4 rounded-lg border-2 border-primary/20 bg-background text-foreground text-lg focus:border-primary focus:outline-none transition-colors"
                  />
                </div>
                <div className="space-y-4">
                  <label className="block text-sm font-semibold text-foreground mb-2">
                    {t('landing.calculator.averageTicket')}
                  </label>
                  <input
                    type="number"
                    placeholder={t('landing.calculator.example150')}
                    value={averageTicket || ''}
                    onChange={(e) => setAverageTicket(parseInt(e.target.value) || 0)}
                    className="w-full p-4 rounded-lg border-2 border-primary/20 bg-background text-foreground text-lg focus:border-primary focus:outline-none transition-colors"
                  />
                </div>
                <div className="space-y-4">
                  <label className="flex items-center gap-2 text-sm font-semibold text-foreground mb-2">
                    {t('landing.calculator.conversionRate')}
                    <div className="group relative">
                      <div className="w-4 h-4 bg-primary/20 rounded-full flex items-center justify-center cursor-help">
                        <span className="text-xs font-bold text-primary">i</span>
                      </div>
                      <div className="absolute bottom-6 left-1/2 transform -translate-x-1/2 bg-foreground text-background text-xs rounded-lg px-3 py-2 opacity-0 group-hover:opacity-100 transition-opacity duration-200 whitespace-nowrap z-10">
                        {t('landing.calculator.tooltip')}
                      </div>
                    </div>
                  </label>
                  <input
                    type="number"
                    placeholder="30"
                    value={conversionRate || ''}
                    onChange={(e) => setConversionRate(parseInt(e.target.value) || 0)}
                    min="0"
                    max="100"
                    className="w-full p-4 rounded-lg border-2 border-primary/20 bg-background text-foreground text-lg focus:border-primary focus:outline-none transition-colors"
                  />
                </div>
              </div>

              <div className="bg-background/80 rounded-xl p-6 border border-primary/20">
                <div className="grid md:grid-cols-2 gap-8 text-center">
                  <div>
                    <h4 className="text-sm font-semibold text-muted-foreground uppercase tracking-wide mb-2">
                      {t('landing.calculator.recoveryWithGladius')} ({conversionRate || 30}%)
                    </h4>
                    <p className="text-3xl font-bold text-primary">
                      €{monthlyRecovery.toLocaleString('es-ES')}
                    </p>
                  </div>
                  <div>
                    <h4 className="text-sm font-semibold text-muted-foreground uppercase tracking-wide mb-2">
                      {t('landing.calculator.annualRecoveredIncome')}
                    </h4>
                    <p className="text-3xl font-bold text-primary">
                      €{yearlyBenefit.toLocaleString('es-ES')}
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </section>

      {/* FAQ Section */}
      <section data-section="faq" className="py-24 px-4 sm:px-6 bg-gradient-to-br from-background via-primary/5 to-background">
        <div className="container mx-auto max-w-4xl">
          <div className="text-center mb-20">
            <div className="inline-flex items-center gap-2 bg-primary/10 text-primary px-4 py-2 rounded-full text-sm font-medium mb-6">
              <CheckCircle className="w-4 h-4" />
              {t('landing.faq.badge')}
            </div>
            <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6 leading-tight">
              {t('landing.faq.title')}
            </h2>
            <p className="text-xl text-muted-foreground max-w-2xl mx-auto">
              {t('landing.faq.subtitle')}
            </p>
          </div>

          <div className="grid md:grid-cols-2 gap-6">
            <Card className="p-8 bg-background/80 backdrop-blur-sm border-2 border-primary/10 hover:border-primary/20 transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="flex items-start gap-4 mb-4">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0 mt-1 group-hover:bg-primary/30 transition-colors">
                    <Clock className="w-4 h-4 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-bold text-foreground mb-3">{t('landing.faq.responseSpeed')}</h3>
                    <p className="text-muted-foreground leading-relaxed">{t('landing.faq.responseSpeedAnswer')}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-8 bg-background/80 backdrop-blur-sm border-2 border-primary/10 hover:border-primary/20 transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="flex items-start gap-4 mb-4">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0 mt-1 group-hover:bg-primary/30 transition-colors">
                    <Users className="w-4 h-4 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-bold text-foreground mb-3">{t('landing.faq.humanSounding')}</h3>
                    <p className="text-muted-foreground leading-relaxed">{t('landing.faq.humanSoundingAnswer')}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-8 bg-background/80 backdrop-blur-sm border-2 border-primary/10 hover:border-primary/20 transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="flex items-start gap-4 mb-4">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0 mt-1 group-hover:bg-primary/30 transition-colors">
                    <Calendar className="w-4 h-4 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-bold text-foreground mb-3">{t('landing.faq.schedulesAppointments')}</h3>
                    <p className="text-muted-foreground leading-relaxed">{t('landing.faq.schedulesAppointmentsAnswer')}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-8 bg-background/80 backdrop-blur-sm border-2 border-primary/10 hover:border-primary/20 transition-all duration-300 group">
              <CardContent className="p-0">
                <div className="flex items-start gap-4 mb-4">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0 mt-1 group-hover:bg-primary/30 transition-colors">
                    <Shield className="w-4 h-4 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-bold text-foreground mb-3">{t('landing.faq.secureData')}</h3>
                    <p className="text-muted-foreground leading-relaxed">{t('landing.faq.secureDataAnswer')}</p>
                  </div>
                </div>
              </CardContent>
            </Card>

            <Card className="p-8 bg-background/80 backdrop-blur-sm border-2 border-primary/10 hover:border-primary/20 transition-all duration-300 group md:col-span-2">
              <CardContent className="p-0">
                <div className="flex items-start gap-4 mb-4">
                  <div className="w-8 h-8 bg-primary/20 rounded-full flex items-center justify-center flex-shrink-0 mt-1 group-hover:bg-primary/30 transition-colors">
                    <BarChart3 className="w-4 h-4 text-primary" />
                  </div>
                  <div>
                    <h3 className="text-lg font-bold text-foreground mb-3">{t('landing.faq.viewInteractions')}</h3>
                    <p className="text-muted-foreground leading-relaxed">{t('landing.faq.viewInteractionsAnswer')}</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        </div>
      </section>

      {/* Final CTA */}
      <section className="py-16 sm:py-20 px-4 sm:px-6">
        <div className="container mx-auto max-w-2xl text-center">
          <h2 className="text-3xl sm:text-4xl font-bold text-foreground mb-4 sm:mb-6 px-2">
            {t('landing.finalCTA.title')}
          </h2>
          <p className="text-lg sm:text-xl text-muted-foreground mb-6 sm:mb-8 px-2">
            {t('landing.finalCTA.subtitle')}
          </p>
          
          <Button 
            onClick={() => window.open('https://calendly.com/pol-gladiusai/llamada-introduccion', '_blank')}
            size="lg" 
            className="text-lg sm:text-xl px-8 sm:px-12 py-6 sm:py-8 gap-3 sm:gap-4 shadow-elegant hover:shadow-lg"
          >
            {t('landing.cta.bookDemo')}
            <ArrowRight className="w-5 h-5 sm:w-6 sm:h-6" />
          </Button>
        </div>
      </section>

      {/* Footer */}
      <footer className="bg-background border-t border-border py-8 sm:py-12">
        <div className="container mx-auto px-4 sm:px-6">
          <div className="flex flex-col md:flex-row justify-between items-center gap-4">
            <div className="flex items-center space-x-3">
              <div className="w-6 h-6 sm:w-8 sm:h-8 bg-primary rounded-lg flex items-center justify-center">
                <Sword className="w-3 h-3 sm:w-4 sm:h-4 text-primary-foreground" />
              </div>
              <span className="text-base sm:text-lg font-semibold text-foreground">GladiusAI</span>
            </div>
            <p className="text-xs sm:text-sm text-muted-foreground text-center">
              {t('footer.rights')}
            </p>
          </div>
        </div>
      </footer>
    </div>
  );
};

export default Landing;
